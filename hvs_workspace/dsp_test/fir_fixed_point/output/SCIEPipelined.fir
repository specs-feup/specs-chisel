circuit SCIEPipelined :
  module SCIEPipelined :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip valid : UInt<1>, flip insn : UInt<32>, flip rs1 : UInt<32>, flip rs2 : UInt<32>, rd : UInt<32>}

    wire _coeffs_WIRE : UInt<32>[8] @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[0] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[1] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[2] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[3] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[4] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[5] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[6] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    _coeffs_WIRE[7] <= UInt<32>("h0") @[SCIEPipelined.scala 19:31]
    reg coeffs : UInt<32>[8], clock with :
      reset => (reset, _coeffs_WIRE) @[SCIEPipelined.scala 19:23]
    wire _data_WIRE : UInt<32>[8] @[SCIEPipelined.scala 20:29]
    _data_WIRE[0] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[1] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[2] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[3] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[4] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[5] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[6] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    _data_WIRE[7] <= UInt<32>("h0") @[SCIEPipelined.scala 20:29]
    reg data : UInt<32>[8], clock with :
      reset => (reset, _data_WIRE) @[SCIEPipelined.scala 20:21]
    reg result : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SCIEPipelined.scala 21:23]
    when io.valid : @[SCIEPipelined.scala 23:17]
      node _T = bits(io.insn, 6, 0) @[SCIEPipelined.scala 24:17]
      node _T_1 = eq(_T, UInt<4>("hb")) @[SCIEPipelined.scala 24:24]
      when _T_1 : @[SCIEPipelined.scala 24:42]
        node _T_2 = bits(io.rs2, 2, 0)
        coeffs[_T_2] <= io.rs1 @[SCIEPipelined.scala 25:22]
        result <= UInt<1>("h1") @[SCIEPipelined.scala 26:14]
      else :
        node _T_3 = bits(io.insn, 6, 0) @[SCIEPipelined.scala 27:23]
        node _T_4 = eq(_T_3, UInt<6>("h2b")) @[SCIEPipelined.scala 27:30]
        when _T_4 : @[SCIEPipelined.scala 27:48]
          data[1] <= data[0] @[SCIEPipelined.scala 28:54]
          data[2] <= data[1] @[SCIEPipelined.scala 28:54]
          data[3] <= data[2] @[SCIEPipelined.scala 28:54]
          data[4] <= data[3] @[SCIEPipelined.scala 28:54]
          data[5] <= data[4] @[SCIEPipelined.scala 28:54]
          data[6] <= data[5] @[SCIEPipelined.scala 28:54]
          data[7] <= data[6] @[SCIEPipelined.scala 28:54]
          data[0] <= io.rs1 @[SCIEPipelined.scala 29:15]
          result <= UInt<1>("h1") @[SCIEPipelined.scala 30:14]
        else :
          node _T_5 = bits(io.insn, 6, 0) @[SCIEPipelined.scala 31:23]
          node _T_6 = eq(_T_5, UInt<7>("h5b")) @[SCIEPipelined.scala 31:30]
          when _T_6 : @[SCIEPipelined.scala 31:48]
            node _result_T = mul(data[0], coeffs[0]) @[SCIEPipelined.scala 32:57]
            node _result_T_1 = mul(data[1], coeffs[1]) @[SCIEPipelined.scala 32:57]
            node _result_T_2 = mul(data[2], coeffs[2]) @[SCIEPipelined.scala 32:57]
            node _result_T_3 = mul(data[3], coeffs[3]) @[SCIEPipelined.scala 32:57]
            node _result_T_4 = mul(data[4], coeffs[4]) @[SCIEPipelined.scala 32:57]
            node _result_T_5 = mul(data[5], coeffs[5]) @[SCIEPipelined.scala 32:57]
            node _result_T_6 = mul(data[6], coeffs[6]) @[SCIEPipelined.scala 32:57]
            node _result_T_7 = mul(data[7], coeffs[7]) @[SCIEPipelined.scala 32:57]
            node _result_T_8 = add(_result_T, _result_T_1) @[SCIEPipelined.scala 32:72]
            node _result_T_9 = tail(_result_T_8, 1) @[SCIEPipelined.scala 32:72]
            node _result_T_10 = add(_result_T_9, _result_T_2) @[SCIEPipelined.scala 32:72]
            node _result_T_11 = tail(_result_T_10, 1) @[SCIEPipelined.scala 32:72]
            node _result_T_12 = add(_result_T_11, _result_T_3) @[SCIEPipelined.scala 32:72]
            node _result_T_13 = tail(_result_T_12, 1) @[SCIEPipelined.scala 32:72]
            node _result_T_14 = add(_result_T_13, _result_T_4) @[SCIEPipelined.scala 32:72]
            node _result_T_15 = tail(_result_T_14, 1) @[SCIEPipelined.scala 32:72]
            node _result_T_16 = add(_result_T_15, _result_T_5) @[SCIEPipelined.scala 32:72]
            node _result_T_17 = tail(_result_T_16, 1) @[SCIEPipelined.scala 32:72]
            node _result_T_18 = add(_result_T_17, _result_T_6) @[SCIEPipelined.scala 32:72]
            node _result_T_19 = tail(_result_T_18, 1) @[SCIEPipelined.scala 32:72]
            node _result_T_20 = add(_result_T_19, _result_T_7) @[SCIEPipelined.scala 32:72]
            node _result_T_21 = tail(_result_T_20, 1) @[SCIEPipelined.scala 32:72]
            result <= _result_T_21 @[SCIEPipelined.scala 32:14]
    io.rd <= result @[SCIEPipelined.scala 35:9]

