circuit SCIEPipelined :
  module SCIEPipelined :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip valid : UInt<1>, flip insn : UInt<32>, flip rs1 : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}, flip rs2 : UInt<32>, rd : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}}

    wire _coeffs_WIRE : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>} @[SCIEPipelined.scala 22:76]
    node _coeffs_T = asFixedPoint(UInt<16>("h0"), 4) @[SCIEPipelined.scala 22:76]
    _coeffs_WIRE.imag <= _coeffs_T @[SCIEPipelined.scala 22:76]
    node _coeffs_T_1 = asFixedPoint(UInt<16>("h0"), 4) @[SCIEPipelined.scala 22:76]
    _coeffs_WIRE.real <= _coeffs_T_1 @[SCIEPipelined.scala 22:76]
    wire _coeffs_WIRE_1 : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}[1] @[SCIEPipelined.scala 22:31]
    _coeffs_WIRE_1[0].imag <= _coeffs_WIRE.imag @[SCIEPipelined.scala 22:31]
    _coeffs_WIRE_1[0].real <= _coeffs_WIRE.real @[SCIEPipelined.scala 22:31]
    reg coeffs : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}[1], clock with :
      reset => (reset, _coeffs_WIRE_1) @[SCIEPipelined.scala 22:23]
    wire _data_WIRE : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>} @[SCIEPipelined.scala 23:74]
    node _data_T = asFixedPoint(UInt<16>("h0"), 4) @[SCIEPipelined.scala 23:74]
    _data_WIRE.imag <= _data_T @[SCIEPipelined.scala 23:74]
    node _data_T_1 = asFixedPoint(UInt<16>("h0"), 4) @[SCIEPipelined.scala 23:74]
    _data_WIRE.real <= _data_T_1 @[SCIEPipelined.scala 23:74]
    wire _data_WIRE_1 : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}[1] @[SCIEPipelined.scala 23:29]
    _data_WIRE_1[0].imag <= _data_WIRE.imag @[SCIEPipelined.scala 23:29]
    _data_WIRE_1[0].real <= _data_WIRE.real @[SCIEPipelined.scala 23:29]
    reg data : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}[1], clock with :
      reset => (reset, _data_WIRE_1) @[SCIEPipelined.scala 23:21]
    wire _result_WIRE : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>} @[SCIEPipelined.scala 24:52]
    node _result_T = asFixedPoint(UInt<16>("h0"), 4) @[SCIEPipelined.scala 24:52]
    _result_WIRE.imag <= _result_T @[SCIEPipelined.scala 24:52]
    node _result_T_1 = asFixedPoint(UInt<16>("h0"), 4) @[SCIEPipelined.scala 24:52]
    _result_WIRE.real <= _result_T_1 @[SCIEPipelined.scala 24:52]
    reg result : { real : Fixed<16><<4>>, imag : Fixed<16><<4>>}, clock with :
      reset => (reset, _result_WIRE) @[SCIEPipelined.scala 24:23]
    when io.valid : @[SCIEPipelined.scala 26:17]
      node _T = bits(io.insn, 6, 0) @[SCIEPipelined.scala 27:17]
      node _T_1 = eq(_T, UInt<4>("hb")) @[SCIEPipelined.scala 27:24]
      when _T_1 : @[SCIEPipelined.scala 27:42]
        coeffs[UInt<1>("h0")].imag <= io.rs1.imag @[SCIEPipelined.scala 28:22]
        coeffs[UInt<1>("h0")].real <= io.rs1.real @[SCIEPipelined.scala 28:22]
        result.imag <= coeffs[UInt<1>("h0")].imag @[SCIEPipelined.scala 29:14]
        result.real <= coeffs[UInt<1>("h0")].real @[SCIEPipelined.scala 29:14]
      else :
        node _T_2 = bits(io.insn, 6, 0) @[SCIEPipelined.scala 30:23]
        node _T_3 = eq(_T_2, UInt<6>("h2b")) @[SCIEPipelined.scala 30:30]
        when _T_3 : @[SCIEPipelined.scala 30:48]
          data[0].imag <= io.rs1.imag @[SCIEPipelined.scala 32:15]
          data[0].real <= io.rs1.real @[SCIEPipelined.scala 32:15]
          result.imag <= data[0].imag @[SCIEPipelined.scala 33:14]
          result.real <= data[0].real @[SCIEPipelined.scala 33:14]
        else :
          node _T_4 = bits(io.insn, 6, 0) @[SCIEPipelined.scala 34:23]
          node _T_5 = eq(_T_4, UInt<7>("h5b")) @[SCIEPipelined.scala 34:30]
          when _T_5 : @[SCIEPipelined.scala 34:48]
            node _result_c_p_d_T = add(coeffs[0].real, coeffs[0].imag) @[FixedPointTypeClass.scala 21:58]
            node _result_c_p_d_T_1 = tail(_result_c_p_d_T, 1) @[FixedPointTypeClass.scala 21:58]
            node result_c_p_d = asFixedPoint(_result_c_p_d_T_1, 4) @[FixedPointTypeClass.scala 21:58]
            node _result_a_p_b_T = add(data[0].real, data[0].imag) @[FixedPointTypeClass.scala 21:58]
            node _result_a_p_b_T_1 = tail(_result_a_p_b_T, 1) @[FixedPointTypeClass.scala 21:58]
            node result_a_p_b = asFixedPoint(_result_a_p_b_T_1, 4) @[FixedPointTypeClass.scala 21:58]
            node _result_b_m_a_T = sub(data[0].imag, data[0].real) @[FixedPointTypeClass.scala 31:68]
            node _result_b_m_a_T_1 = tail(_result_b_m_a_T, 1) @[FixedPointTypeClass.scala 31:68]
            node result_b_m_a = asFixedPoint(_result_b_m_a_T_1, 4) @[FixedPointTypeClass.scala 31:68]
            node result_ac_p_ad = mul(data[0].real, result_c_p_d) @[FixedPointTypeClass.scala 43:59]
            node result_ad_p_bd = mul(result_a_p_b, coeffs[0].imag) @[FixedPointTypeClass.scala 43:59]
            node result_bc_m_ac = mul(result_b_m_a, coeffs[0].real) @[FixedPointTypeClass.scala 43:59]
            node _result_T_2 = sub(result_ac_p_ad, result_ad_p_bd) @[FixedPointTypeClass.scala 31:68]
            node _result_T_3 = tail(_result_T_2, 1) @[FixedPointTypeClass.scala 31:68]
            node _result_T_4 = asFixedPoint(_result_T_3, 8) @[FixedPointTypeClass.scala 31:68]
            node _result_T_5 = add(result_ac_p_ad, result_bc_m_ac) @[FixedPointTypeClass.scala 21:58]
            node _result_T_6 = tail(_result_T_5, 1) @[FixedPointTypeClass.scala 21:58]
            node _result_T_7 = asFixedPoint(_result_T_6, 8) @[FixedPointTypeClass.scala 21:58]
            wire result_result : { real : Fixed<32><<8>>, imag : Fixed<32><<8>>} @[DspComplex.scala 34:22]
            result_result.real <= _result_T_4 @[DspComplex.scala 35:17]
            result_result.imag <= _result_T_7 @[DspComplex.scala 36:17]
            result.imag <= result_result.imag @[SCIEPipelined.scala 35:16]
            result.real <= result_result.real @[SCIEPipelined.scala 35:16]
    io.rd.imag <= result.imag @[SCIEPipelined.scala 38:9]
    io.rd.real <= result.real @[SCIEPipelined.scala 38:9]

