circuit SCIEUnpipelined :
  module SCIEUnpipelined :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip insn : UInt<32>, flip rs1 : UInt<11>, flip rs2 : UInt<11>, rd : UInt<11>}

    wire _coeffs_WIRE : UInt<11>[11] @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[0] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[1] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[2] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[3] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[4] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[5] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[6] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[7] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[8] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[9] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    _coeffs_WIRE[10] <= UInt<11>("h0") @[SCIEUnpipelined.scala 28:31]
    reg coeffs : UInt<11>[11], clock with :
      reset => (reset, _coeffs_WIRE) @[SCIEUnpipelined.scala 28:23]
    wire _data_WIRE : UInt<11>[11] @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[0] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[1] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[2] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[3] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[4] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[5] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[6] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[7] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[8] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[9] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    _data_WIRE[10] <= UInt<11>("h0") @[SCIEUnpipelined.scala 29:29]
    reg data : UInt<11>[11], clock with :
      reset => (reset, _data_WIRE) @[SCIEUnpipelined.scala 29:21]
    reg result : UInt<32>, clock with :
      reset => (reset, UInt<32>("h0")) @[SCIEUnpipelined.scala 30:23]
    node _T = bits(io.insn, 15, 0) @[SCIEUnpipelined.scala 32:15]
    node _T_1 = eq(_T, UInt<15>("h700b")) @[SCIEUnpipelined.scala 32:23]
    when _T_1 : @[SCIEUnpipelined.scala 32:58]
      node _T_2 = bits(io.rs2, 3, 0)
      coeffs[_T_2] <= io.rs1 @[SCIEUnpipelined.scala 33:20]
      result <= UInt<1>("h1") @[SCIEUnpipelined.scala 34:12]
    else :
      node _T_3 = bits(io.insn, 15, 0) @[SCIEUnpipelined.scala 35:21]
      node _T_4 = eq(_T_3, UInt<15>("h702b")) @[SCIEUnpipelined.scala 35:29]
      when _T_4 : @[SCIEUnpipelined.scala 35:63]
        data[1] <= data[0] @[SCIEUnpipelined.scala 36:50]
        data[2] <= data[1] @[SCIEUnpipelined.scala 36:50]
        data[3] <= data[2] @[SCIEUnpipelined.scala 36:50]
        data[4] <= data[3] @[SCIEUnpipelined.scala 36:50]
        data[5] <= data[4] @[SCIEUnpipelined.scala 36:50]
        data[6] <= data[5] @[SCIEUnpipelined.scala 36:50]
        data[7] <= data[6] @[SCIEUnpipelined.scala 36:50]
        data[8] <= data[7] @[SCIEUnpipelined.scala 36:50]
        data[9] <= data[8] @[SCIEUnpipelined.scala 36:50]
        data[10] <= data[9] @[SCIEUnpipelined.scala 36:50]
        data[0] <= io.rs1 @[SCIEUnpipelined.scala 37:13]
        result <= UInt<1>("h1") @[SCIEUnpipelined.scala 38:12]
      else :
        node _T_5 = bits(io.insn, 15, 0) @[SCIEUnpipelined.scala 39:21]
        node _T_6 = eq(_T_5, UInt<15>("h705b")) @[SCIEUnpipelined.scala 39:29]
        when _T_6 : @[SCIEUnpipelined.scala 39:58]
          node _result_T = mul(data[0], coeffs[0]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_1 = mul(data[1], coeffs[1]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_2 = mul(data[2], coeffs[2]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_3 = mul(data[3], coeffs[3]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_4 = mul(data[4], coeffs[4]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_5 = mul(data[5], coeffs[5]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_6 = mul(data[6], coeffs[6]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_7 = mul(data[7], coeffs[7]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_8 = mul(data[8], coeffs[8]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_9 = mul(data[9], coeffs[9]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_10 = mul(data[10], coeffs[10]) @[SCIEUnpipelined.scala 40:55]
          node _result_T_11 = add(_result_T, _result_T_1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_12 = tail(_result_T_11, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_13 = add(_result_T_12, _result_T_2) @[SCIEUnpipelined.scala 40:70]
          node _result_T_14 = tail(_result_T_13, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_15 = add(_result_T_14, _result_T_3) @[SCIEUnpipelined.scala 40:70]
          node _result_T_16 = tail(_result_T_15, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_17 = add(_result_T_16, _result_T_4) @[SCIEUnpipelined.scala 40:70]
          node _result_T_18 = tail(_result_T_17, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_19 = add(_result_T_18, _result_T_5) @[SCIEUnpipelined.scala 40:70]
          node _result_T_20 = tail(_result_T_19, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_21 = add(_result_T_20, _result_T_6) @[SCIEUnpipelined.scala 40:70]
          node _result_T_22 = tail(_result_T_21, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_23 = add(_result_T_22, _result_T_7) @[SCIEUnpipelined.scala 40:70]
          node _result_T_24 = tail(_result_T_23, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_25 = add(_result_T_24, _result_T_8) @[SCIEUnpipelined.scala 40:70]
          node _result_T_26 = tail(_result_T_25, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_27 = add(_result_T_26, _result_T_9) @[SCIEUnpipelined.scala 40:70]
          node _result_T_28 = tail(_result_T_27, 1) @[SCIEUnpipelined.scala 40:70]
          node _result_T_29 = add(_result_T_28, _result_T_10) @[SCIEUnpipelined.scala 40:70]
          node _result_T_30 = tail(_result_T_29, 1) @[SCIEUnpipelined.scala 40:70]
          result <= _result_T_30 @[SCIEUnpipelined.scala 40:12]
    io.rd <= result @[SCIEUnpipelined.scala 42:9]

